# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - adoptit

on:
  push:
    branches:
      - master
  workflow_dispatch:
env:
  ANGULAR_IMAGE_NAME: adoptitfrontend
  SPRING_BOOT_IMAGE_NAME: adoptitbackend
  DOCKER_HUB_USERNAME: monzaj19
jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Log in to registry
        uses: docker/login-action@v1
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Angular Image
        id: angular_docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./frontend/adoptit-front/Dockerfile
          push: true
          tags: index.docker.io/${{ env.DOCKER_HUB_USERNAME }}/${{ env.ANGULAR_IMAGE_NAME }}:${{ github.sha }}

      - name: Build and push Spring Boot Image
        id: spring-boot-docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./backend/Back-end/Dockerfile
          push: true
          tags: index.docker.io/${{ env.DOCKER_HUB_USERNAME }}/${{ env.SPRING_BOOT_IMAGE_NAME }}:${{ github.sha }}

      - name: Run docker compose
        run: docker-compose up -d

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'adoptit'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'index.docker.io/${{ env.DOCKER_HUB_USERNAME }}/adoptitfrontend:${{ github.sha }}'
